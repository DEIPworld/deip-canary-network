//! Autogenerated weights for pallet_deip_investment_opportunity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2022-01-19, STEPS: `[50, ]`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// appchain-deip
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_deip_investment_opportunity
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --heap-pages
// 4096
// --output
// weights.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
    fn create_investment_opportunity(s: u32) -> Weight;
    fn activate_crowdfunding() -> Weight;
    fn expire_crowdfunding_already_expired() -> Weight;
    fn expire_crowdfunding() -> Weight;
    fn finish_crowdfunding() -> Weight;
    fn invest() -> Weight;
    fn invest_hard_cap_reached() -> Weight;
}

/// Weight functions for pallet_deip_investment_opportunity.
pub struct Weights<T>(PhantomData<T>);

impl<T: frame_system::Config> WeightInfo for Weights<T> {
    fn create_investment_opportunity(s: u32) -> Weight {
        (0 as Weight)
            // Standard Error: 43_194_000
            .saturating_add((362_308_000 as Weight).saturating_mul(s as Weight))
            .saturating_add(T::DbWeight::get().reads(6 as Weight))
            .saturating_add(T::DbWeight::get().reads((6 as Weight).saturating_mul(s as Weight)))
            .saturating_add(T::DbWeight::get().writes(4 as Weight))
            .saturating_add(T::DbWeight::get().writes((4 as Weight).saturating_mul(s as Weight)))
    }
    // Storage: Deip SimpleCrowdfundingMap (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    fn activate_crowdfunding() -> Weight {
        (45_068_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(2 as Weight))
            .saturating_add(T::DbWeight::get().writes(1 as Weight))
    }
    // Storage: Deip SimpleCrowdfundingMap (r:1 w:1)
    fn expire_crowdfunding_already_expired() -> Weight {
        (19_449_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(1 as Weight))
            .saturating_add(T::DbWeight::get().writes(1 as Weight))
    }
    // Storage: Deip SimpleCrowdfundingMap (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Deip InvestmentMap (r:1 w:0)
    // Storage: Assets InvestmentMap (r:1 w:1)
    // Storage: Assets InvestmentByAssetId (r:11 w:11)
    // Storage: Assets AssetIdByDeipAssetId (r:22 w:0)
    // Storage: ParityTechAssets Account (r:21 w:20)
    // Storage: ParityTechAssets Asset (r:10 w:10)
    // Storage: System Account (r:1 w:1)
    // Storage: Assets ProjectIdByAssetId (r:10 w:0)
    fn expire_crowdfunding() -> Weight {
        (1_271_753_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(79 as Weight))
            .saturating_add(T::DbWeight::get().writes(44 as Weight))
    }
    // Storage: Deip SimpleCrowdfundingMap (r:1 w:1)
    // Storage: Deip InvestmentMap (r:1 w:1)
    // Storage: Assets InvestmentMap (r:1 w:1)
    // Storage: Assets AssetIdByDeipAssetId (r:22 w:0)
    // Storage: ParityTechAssets Asset (r:11 w:11)
    // Storage: ParityTechAssets Account (r:22 w:22)
    // Storage: System Account (r:1 w:1)
    // Storage: Assets ProjectIdByAssetId (r:11 w:0)
    // Storage: Assets InvestmentByAssetId (r:11 w:11)
    fn finish_crowdfunding() -> Weight {
        (1_429_724_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(81 as Weight))
            .saturating_add(T::DbWeight::get().writes(48 as Weight))
    }
    // Storage: Deip SimpleCrowdfundingMap (r:1 w:1)
    // Storage: Assets InvestmentMap (r:1 w:0)
    // Storage: Assets AssetIdByDeipAssetId (r:2 w:0)
    // Storage: ParityTechAssets Asset (r:1 w:1)
    // Storage: ParityTechAssets Account (r:2 w:2)
    // Storage: System Account (r:1 w:1)
    // Storage: Deip InvestmentMap (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    fn invest() -> Weight {
        (164_877_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(10 as Weight))
            .saturating_add(T::DbWeight::get().writes(6 as Weight))
    }
    // Storage: Deip SimpleCrowdfundingMap (r:1 w:1)
    // Storage: Assets InvestmentMap (r:1 w:1)
    // Storage: Assets AssetIdByDeipAssetId (r:22 w:0)
    // Storage: ParityTechAssets Asset (r:11 w:11)
    // Storage: ParityTechAssets Account (r:22 w:22)
    // Storage: System Account (r:1 w:1)
    // Storage: Deip InvestmentMap (r:1 w:1)
    // Storage: Timestamp Now (r:1 w:0)
    // Storage: Assets ProjectIdByAssetId (r:11 w:0)
    // Storage: Assets InvestmentByAssetId (r:11 w:11)
    fn invest_hard_cap_reached() -> Weight {
        (1_528_920_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(82 as Weight))
            .saturating_add(T::DbWeight::get().writes(48 as Weight))
    }
}
